from telegram import Update
from telegram import KeyboardButton
from telegram import ReplyKeyboardMarkup
from telegram import ReplyKeyboardRemove
from telegram.ext import CallbackContext
from telegram.ext import Updater
from telegram.ext import Filters
from telegram.ext import MessageHandler

button_zaim = '–ú–∏–∫—Ä–æ–∑–∞–π–º'
button_dcard = '–î–µ–±–µ—Ç–æ–≤–∞—è –∫–∞—Ä—Ç–∞'
button_ccard = '–ö—Ä–µ–¥–∏—Ç–Ω–∞—è –∫–∞—Ä—Ç–∞'

def button_zaim_handler(update: Update, context: CallbackContext):
    update.message.reply_text(
        text='–≠—Ç–æ –∑–∞–π–º—ãüí∏',
        reply_markup=ReplyKeyboardRemove(),
    )

def button_dcard_handler(update: Update, context: CallbackContext):
    update.message.reply_text(
        text='–≠—Ç–æ –¥–µ–±–µ—Ç–æ–≤—ã–µ –∫–∞—Ä—Ç—ãüí≥',
        reply_markup=ReplyKeyboardRemove(),
    )
def button_ccard_handler(update: Update, context: CallbackContext):
    update.message.reply_text(
        text='–≠—Ç–æ –∫—Ä–µ–¥–∏—Ç–Ω—ã–µ –∫–∞—Ä—Ç—ãüí∞',
        reply_markup=ReplyKeyboardRemove(),
    )

        
def message_handler(update: Update, context: CallbackContext):
    text = update.message.text
    if text == button_zaim:
        return button_zaim_handler(update=update, context=context)
    elif text == button_dcard:
        return button_dcard_handler(update=update, context=context)
    elif text == button_ccard:
        return button_ccard_handler(update=update, context=context)        

    reply_markup = ReplyKeyboardMarkup(
        keyboard=[
            [
                KeyboardButton(text=button_zaim),
                KeyboardButton(text=button_dcard),
                KeyboardButton(text=button_ccard),
            ],
        ],
        resize_keyboard=True,
    )

    update.message.reply_text(
         text='–ü—Ä–∏–≤–µ—Ç, —è ZaimRu!\n–í—ã–±–µ—Ä–∏ —Ç–æ, —á—Ç–æ –Ω—É–∂–Ω–æ, –∏ —è –ø–æ–º–æ–≥—É',
         reply_markup=reply_markup,
    )


def main():
    print('Start')
    updater = Updater(
        token='1058091115:AAE_kqsq0_w4UJdtgYO9rrUyZg_bhMqcrHE',
        use_context=True,
    )
    updater.dispatcher.add_handler(MessageHandler(filters=Filters.all, callback=message_handler))

    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
        main()

